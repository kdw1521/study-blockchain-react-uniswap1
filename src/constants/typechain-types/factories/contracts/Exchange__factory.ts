/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Exchange, ExchangeInterface } from "../../contracts/Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTokens",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minTokens",
        type: "uint256",
      },
    ],
    name: "ethToTokenSwap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minTokens",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receipent",
        type: "address",
      },
    ],
    name: "ethToTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getOutputAmountNoFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lpToken",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minEth",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minTokenBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minEthBought",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "tokenToTokenSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d6138038062002d6183398181016040528101906200003791906200027a565b6040518060400160405280600f81526020017f4772617920556e697377617020563200000000000000000000000000000000008152506040518060400160405280600781526020017f47554e492d5632000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000160565b508060049080519060200190620000d492919062000160565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000311565b8280546200016e90620002db565b90600052602060002090601f016020900481019282620001925760008555620001de565b82601f10620001ad57805160ff1916838001178555620001de565b82800160010185558215620001de579182015b82811115620001dd578251825591602001919060010190620001c0565b5b509050620001ed9190620001f1565b5090565b5b808211156200020c576000816000905550600101620001f2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002428262000215565b9050919050565b620002548162000235565b81146200026057600080fd5b50565b600081519050620002748162000249565b92915050565b60006020828403121562000293576200029262000210565b5b6000620002a38482850162000263565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f457607f821691505b602082108114156200030b576200030a620002ac565b5b50919050565b612a4080620003216000396000f3fe6080604052600436106101145760003560e01c806351c6590a116100a0578063a9059cbb11610064578063a9059cbb146103e6578063d3fdbbb514610423578063dd62ed3e14610460578063e0486c8a1461049d578063f979dcd7146104c657610114565b806351c6590a146102d357806370a082311461030357806395d89b41146103405780639c8f9f231461036b578063a457c2d7146103a957610114565b8063313ce567116100e7578063313ce567146101e957806331d88120146102145780633799098114610251578063389d9a401461027a578063395093511461029657610114565b806306fdde0314610119578063095ea7b31461014457806318160ddd1461018157806323b872dd146101ac575b600080fd5b34801561012557600080fd5b5061012e6104e2565b60405161013b9190611cf0565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190611dab565b610574565b6040516101789190611e06565b60405180910390f35b34801561018d57600080fd5b50610196610597565b6040516101a39190611e30565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190611e4b565b6105a1565b6040516101e09190611e06565b60405180910390f35b3480156101f557600080fd5b506101fe6105d0565b60405161020b9190611eba565b60405180910390f35b34801561022057600080fd5b5061023b60048036038101906102369190611ed5565b6105d9565b6040516102489190611e30565b60405180910390f35b34801561025d57600080fd5b5061027860048036038101906102739190611f28565b610617565b005b610294600480360381019061028f9190611f8f565b6108fa565b005b3480156102a257600080fd5b506102bd60048036038101906102b89190611dab565b610908565b6040516102ca9190611e06565b60405180910390f35b6102ed60048036038101906102e89190611fcf565b61093f565b6040516102fa9190611e30565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190611ffc565b610c02565b6040516103379190611e30565b60405180910390f35b34801561034c57600080fd5b50610355610c4a565b6040516103629190611cf0565b60405180910390f35b34801561037757600080fd5b50610392600480360381019061038d9190611fcf565b610cdc565b6040516103a0929190612029565b60405180910390f35b3480156103b557600080fd5b506103d060048036038101906103cb9190611dab565b610ee0565b6040516103dd9190611e06565b60405180910390f35b3480156103f257600080fd5b5061040d60048036038101906104089190611dab565b610f57565b60405161041a9190611e06565b60405180910390f35b34801561042f57600080fd5b5061044a60048036038101906104459190611ed5565b610f7a565b6040516104579190611e30565b60405180910390f35b34801561046c57600080fd5b5061048760048036038101906104829190612052565b610fd0565b6040516104949190611e30565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190612092565b611057565b005b6104e060048036038101906104db9190611fcf565b61125f565b005b6060600380546104f190612101565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90612101565b801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b5050505050905090565b60008061057f61126c565b905061058c818585611274565b600191505092915050565b6000600254905090565b6000806105ac61126c565b90506105b985828561143f565b6105c48585856114cb565b60019150509392505050565b60006012905090565b600080849050600083826105ed9190612162565b9050600082866105fd91906121bc565b9050808261060b9190612241565b93505050509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b81526004016106749190612281565b602060405180830381600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c691906122b1565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107259190612281565b60206040518083038186803b15801561073d57600080fd5b505afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077591906122f3565b90506000610784878347610f7a565b9050848110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c09061236c565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b81526004016108289392919061238c565b602060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087a91906123ef565b61088357600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663389d9a408288336040518463ffffffff1660e01b81526004016108bf92919061241c565b6000604051808303818588803b1580156108d857600080fd5b505af11580156108ec573d6000803e3d6000fd5b505050505050505050505050565b610904828261174c565b5050565b60008061091361126c565b90506109348185856109258589610fd0565b61092f91906121bc565b611274565b600191505092915050565b60008061094a610597565b90506000811115610b2857600034476109639190612445565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109c29190612281565b60206040518083038186803b1580156109da57600080fd5b505afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906122f3565b90506000828234610a239190612162565b610a2d9190612241565b905080861015610a3c57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a9b9392919061238c565b602060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed91906123ef565b610af657600080fd5b6000833486610b059190612162565b610b0f9190612241565b9050610b1b3382611916565b8095505050505050610bfd565b60008390506000479050610b3c3382611916565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b9b9392919061238c565b602060405180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed91906123ef565b610bf657600080fd5b8093505050505b919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610c5990612101565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8590612101565b8015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b5050505050905090565b6000806000610ce9610597565b90506000814786610cfa9190612162565b610d049190612241565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d639190612281565b60206040518083038186803b158015610d7b57600080fd5b505afa158015610d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db391906122f3565b90506000838288610dc49190612162565b610dce9190612241565b9050610dda3388611a76565b3373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610e20573d6000803e3d6000fd5b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610e7e929190612479565b602060405180830381600087803b158015610e9857600080fd5b505af1158015610eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed091906123ef565b5082819550955050505050915091565b600080610eeb61126c565b90506000610ef98286610fd0565b905083811015610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3590612514565b60405180910390fd5b610f4b8286868403611274565b60019250505092915050565b600080610f6261126c565b9050610f6f8185856114cb565b600191505092915050565b600080606385610f8a9190612162565b905060008382610f9a9190612162565b9050600082606487610fac9190612162565b610fb691906121bc565b90508082610fc49190612241565b93505050509392505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110b49190612281565b60206040518083038186803b1580156110cc57600080fd5b505afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110491906122f3565b90506000611113848347610f7a565b905082811015611158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114f9061236c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505015801561119e573d6000803e3d6000fd5b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016111fe9392919061238c565b602060405180830381600087803b15801561121857600080fd5b505af115801561122c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125091906123ef565b61125957600080fd5b50505050565b611269813361174c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112db906125a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b90612638565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114329190611e30565b60405180910390a3505050565b600061144b8484610fd0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114c557818110156114b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ae906126a4565b60405180910390fd5b6114c48484848403611274565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561153b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153290612736565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a2906127c8565b60405180910390fd5b6115b6838383611c4d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561163c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116339061285a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116cf91906121bc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117339190611e30565b60405180910390a3611746848484611c52565b50505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117a99190612281565b60206040518083038186803b1580156117c157600080fd5b505afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f991906122f3565b9050600061181334344761180d9190612445565b84610f7a565b905083811015611858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184f9061236c565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016118b5929190612479565b602060405180830381600087803b1580156118cf57600080fd5b505af11580156118e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190791906123ef565b61191057600080fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197d906128c6565b60405180910390fd5b61199260008383611c4d565b80600260008282546119a491906121bc565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119f991906121bc565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a5e9190611e30565b60405180910390a3611a7260008383611c52565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611add90612958565b60405180910390fd5b611af282600083611c4d565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6f906129ea565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611bcf9190612445565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c349190611e30565b60405180910390a3611c4883600084611c52565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c91578082015181840152602081019050611c76565b83811115611ca0576000848401525b50505050565b6000601f19601f8301169050919050565b6000611cc282611c57565b611ccc8185611c62565b9350611cdc818560208601611c73565b611ce581611ca6565b840191505092915050565b60006020820190508181036000830152611d0a8184611cb7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4282611d17565b9050919050565b611d5281611d37565b8114611d5d57600080fd5b50565b600081359050611d6f81611d49565b92915050565b6000819050919050565b611d8881611d75565b8114611d9357600080fd5b50565b600081359050611da581611d7f565b92915050565b60008060408385031215611dc257611dc1611d12565b5b6000611dd085828601611d60565b9250506020611de185828601611d96565b9150509250929050565b60008115159050919050565b611e0081611deb565b82525050565b6000602082019050611e1b6000830184611df7565b92915050565b611e2a81611d75565b82525050565b6000602082019050611e456000830184611e21565b92915050565b600080600060608486031215611e6457611e63611d12565b5b6000611e7286828701611d60565b9350506020611e8386828701611d60565b9250506040611e9486828701611d96565b9150509250925092565b600060ff82169050919050565b611eb481611e9e565b82525050565b6000602082019050611ecf6000830184611eab565b92915050565b600080600060608486031215611eee57611eed611d12565b5b6000611efc86828701611d96565b9350506020611f0d86828701611d96565b9250506040611f1e86828701611d96565b9150509250925092565b60008060008060808587031215611f4257611f41611d12565b5b6000611f5087828801611d96565b9450506020611f6187828801611d96565b9350506040611f7287828801611d96565b9250506060611f8387828801611d60565b91505092959194509250565b60008060408385031215611fa657611fa5611d12565b5b6000611fb485828601611d96565b9250506020611fc585828601611d60565b9150509250929050565b600060208284031215611fe557611fe4611d12565b5b6000611ff384828501611d96565b91505092915050565b60006020828403121561201257612011611d12565b5b600061202084828501611d60565b91505092915050565b600060408201905061203e6000830185611e21565b61204b6020830184611e21565b9392505050565b6000806040838503121561206957612068611d12565b5b600061207785828601611d60565b925050602061208885828601611d60565b9150509250929050565b600080604083850312156120a9576120a8611d12565b5b60006120b785828601611d96565b92505060206120c885828601611d96565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061211957607f821691505b6020821081141561212d5761212c6120d2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061216d82611d75565b915061217883611d75565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121b1576121b0612133565b5b828202905092915050565b60006121c782611d75565b91506121d283611d75565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561220757612206612133565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061224c82611d75565b915061225783611d75565b92508261226757612266612212565b5b828204905092915050565b61227b81611d37565b82525050565b60006020820190506122966000830184612272565b92915050565b6000815190506122ab81611d49565b92915050565b6000602082840312156122c7576122c6611d12565b5b60006122d58482850161229c565b91505092915050565b6000815190506122ed81611d7f565b92915050565b60006020828403121561230957612308611d12565b5b6000612317848285016122de565b91505092915050565b7f496e73756666696369656e74206f757470757420416d6f756e74000000000000600082015250565b6000612356601a83611c62565b915061236182612320565b602082019050919050565b6000602082019050818103600083015261238581612349565b9050919050565b60006060820190506123a16000830186612272565b6123ae6020830185612272565b6123bb6040830184611e21565b949350505050565b6123cc81611deb565b81146123d757600080fd5b50565b6000815190506123e9816123c3565b92915050565b60006020828403121561240557612404611d12565b5b6000612413848285016123da565b91505092915050565b60006040820190506124316000830185611e21565b61243e6020830184612272565b9392505050565b600061245082611d75565b915061245b83611d75565b92508282101561246e5761246d612133565b5b828203905092915050565b600060408201905061248e6000830185612272565b61249b6020830184611e21565b9392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006124fe602583611c62565b9150612509826124a2565b604082019050919050565b6000602082019050818103600083015261252d816124f1565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612590602483611c62565b915061259b82612534565b604082019050919050565b600060208201905081810360008301526125bf81612583565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612622602283611c62565b915061262d826125c6565b604082019050919050565b6000602082019050818103600083015261265181612615565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061268e601d83611c62565b915061269982612658565b602082019050919050565b600060208201905081810360008301526126bd81612681565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612720602583611c62565b915061272b826126c4565b604082019050919050565b6000602082019050818103600083015261274f81612713565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006127b2602383611c62565b91506127bd82612756565b604082019050919050565b600060208201905081810360008301526127e1816127a5565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612844602683611c62565b915061284f826127e8565b604082019050919050565b6000602082019050818103600083015261287381612837565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006128b0601f83611c62565b91506128bb8261287a565b602082019050919050565b600060208201905081810360008301526128df816128a3565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612942602183611c62565b915061294d826128e6565b604082019050919050565b6000602082019050818103600083015261297181612935565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006129d4602283611c62565b91506129df82612978565b604082019050919050565b60006020820190508181036000830152612a03816129c7565b905091905056fea2646970667358221220834aa64a662845bf0d16e8363ccd1c2ab39727a24017587f6fc7deb4afedfaf564736f6c63430008090033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exchange> {
    return super.deploy(_token, overrides || {}) as Promise<Exchange>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  override connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
